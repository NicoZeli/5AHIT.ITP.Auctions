<div id="collapseOne" class="collapse show" aria-labelledby="headingOne" data-parent="#accordion">
    <div class="card-body">

        <div class="wrapper bg-white">
            <div class="d-flex align-items-start py-3 border-bottom">
                <div class="pl-sm-4 pl-2" id="img-section">
                    <b>Product Photos</b>
                    <p>Accepted file type .png</p> <button class="btn button border"><b>Upload</b></button>
                </div>
            </div>
            <div class="d-flex align-items-start py-3 border-bottom">
                <div class="pl-sm-4 pl-2" id="img-section">
                    <b>Uploaded Photos:</b>
                </div>
            </div>
            <div class="py-2">
                <div class="row py-2">
                    <div class="col-md-12"> <label>Productname</label> <input type="text" class="bg-light form-control" @bind-value=Auction.Title> </div>
                </div>
                <div class="row py-2">
                    <div class="col-md-12"> <label>Description</label> <textarea type="text" class="bg-light form-control" @bind=Auction.Description/> </div>
                </div>
                <div class="row py-2">
                    <div class="col-md-12"> <label>End Date</label> <input type="date" class="bg-light form-control" @bind=Auction.EndDate > </div>
                </div>

                <div class="row py-2">
                    @foreach(Categorie c in Categories)
                    {
                        <div>
                          <input type="checkbox" id=@c.Label name=@c.Label>
                          <label for=@c.Label>@c.Label</label>
                        </div>
                    }
                </div>


                <InputSelect @bind-Value=AuctionType>
                    @foreach (Enum type in Enum.GetValues(typeof(EAuctionType)))
                    {
                        <option value=@type>@type</option>
                    }
                </InputSelect>

                @if (Auction is BiddingAuction ba)
                {
                    <div class="row py-2">
                        <div class="col-md-12"> <label>Starting Bit</label> <input type="number" class="bg-light form-control" placeholder="0" @bind-value=ba.StartingPrice> </div>
                    </div>
                     <div class="row py-2">
                        <div class="col-md-12"> <label>Bit Step</label> <input type="number" class="bg-light form-control" placeholder="0" @bind-value=ba.Step> </div>
                    </div>
                     <div class="row py-2">
                        <div class="col-md-12"> <label>Instant Buy Price</label> <input type="number" class="bg-light form-control" placeholder="0" @bind-value=ba.InstantBuyPrice> </div>
                    </div>
                } else if (Auction is BuyAuction baa)
                {
                    <div class="row py-2">
                        <div class="col-md-12"> <label>Starting Bit</label> <input type="number" class="bg-light form-control" placeholder="0" @bind-value=baa.MinimumPrice> </div>
                    </div>
                }





                <div class="py-3 pb-4 border-bottom"> <button type="submit" class="btn btn-primary mr-3">Create Auction</button> </div>
                <!-- <div class="d-sm-flex align-items-center pt-3" id="deactivate">
                    <div> <b>Deactivate your account</b>
                        <p>Details about your company account and password</p>
                    </div>
                    <div class="ml-auto"> <button class="btn danger">Deactivate</button> </div>
                </div> -->

            </div>
        </div>

    </div>
</div>

<style>
    .card {
        /*linear-gradient(to right, #33a3ff, #0675cf, #4cd5ff);*/
    }

    .card-header {
        background: #55595c;
        cursor: pointer;
    }
</style>

@code {
    [Parameter] public Auction Auction { get; set; }


    public List<Categorie> Categories { get; set; } = new List<Categorie>() { new Categorie() { Label = "Spielzeug"}, new Categorie() { Label = "Auto"} };

    private EAuctionType auctionType;
    public EAuctionType AuctionType
    {
        get => auctionType;
        set
        {
            if (value == EAuctionType.BIDDING) Auction = new BiddingAuction();
            else Auction = new BuyAuction();
            auctionType = value;
        }
    }

    protected async override Task OnInitializedAsync()
    {
        AuctionType = EAuctionType.BIDDING;
    }

    public enum EAuctionType { BIDDING, BUY }
}