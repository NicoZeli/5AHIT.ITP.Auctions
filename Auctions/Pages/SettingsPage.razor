@page "/settings"
@using EFCAT.Model.Data
@using Microsoft.AspNetCore.SignalR.Client
@inject IUserRepository _userRepository

<AuthorizeView>
    <Authorized Context=AuthContext>
        @if (User != null) {
            <div id="accordion">
                @if (User != null) {
                    <EditForm Model=User OnValidSubmit=ExecuteSave>
                        <div class="card" style="margin-left: 10%; margin-right: 10%;">
                            <div class="card-header" id="headingOne" data-toggle="collapse" data-target="#collapseOne" aria-controls="collapseOne">
                                <h5 class="mb-0 bg text-light ">
                                    Account Settings
                                </h5>
                            </div>

                            <div id="collapseOne" class="collapse show" aria-labelledby="headingOne" data-parent="#accordion">
                                <div class="card-body">

                                    <div class="wrapper bg-white">
                                        <div class="d-flex align-items-start py-3 border-bottom">
                                            <img src="https://images.pexels.com/photos/1037995/pexels-photo-1037995.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500" class="img" style="width: 100px; height: 100px; " alt="">
                                            <div class="pl-sm-4 pl-2" id="img-section">
                                                <b>Profile Photo</b>
                                                <p>Accepted file type .png. Less than 1MB</p>
                                                <button class="btn button border" onclick="document.getElementById('selectFile').click();"><b>Upload</b></button>
                                                <InputFile OnChange=InputImage id="selectFile" style="display:none" />
                                            </div>
                                        </div>
                                        <div class="py-2">
                                            <div class="row py-2">
                                                <div class="col-md-6"> <label>First Name</label> <input type="text" class="bg-light form-control" placeholder="Steve" @bind-value=User.FirstName> </div>
                                                <div class="col-md-6 pt-md-0 pt-3"> <label for="lastname">Last Name</label> <input type="text" class="bg-light form-control" placeholder="Smith"> </div>
                                            </div>
                                            <div class="row py-2">
                                                <div class="col-md-12"> <label>Email Address</label> <input type="text" class="bg-light form-control" placeholder="@("steve@email.com")" @bind-value=User.Email> </div>
                                            </div>
                                            <div class="row py-2">
                                                <div class="col-md-12"> <label>Username</label> <input type="text" class="bg-light form-control" placeholder="user1234" @bind-value=User.Username> </div>
                                            </div>
                                            <div class="row py-2">
                                                <div class="col-md-12 pt-md-0 pt-3"> <label for="phone">Phone Number</label> <input type="tel" class="bg-light form-control" placeholder="+43 6767307753" @bind-value=User.PhoneNumber> </div>
                                            </div>


                                            <div class="py-3 pb-4 border-bottom"> <button type="submit" class="btn btn-primary mr-3">Save Changes</button> </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </EditForm>
                }
                @if (ChangePassword != null) {
                    <EditForm Model=ChangePassword OnValidSubmit=ExecuteChangePassword>
                        <div class="card" style="margin-left: 10%; margin-right: 10%;">
                            <div class="card-header" id="headingChangePassword" data-toggle="collapse" data-target="#collapseChangePassword" aria-expanded="false" aria-controls="collapseChangePassword">
                                <h5 class="mb-0 bg text-light ">
                                    Change Password
                                </h5>
                            </div>
                            <div id="collapseChangePassword" class="collapse" aria-labelledby="headingChangePassword" data-parent="#accordion">
                                <div class="card-body">
                                    <div class="wrapper bg-white">
                                        <div class="py-2">
                                            <DataAnnotationsValidator />
                                            <ValidationSummary />
                                            <div class="row py-2">
                                                <div class="col-md-12"> <label>Current Password</label> <input type="text" class="bg-light form-control" @bind-value=ChangePassword.ConfirmCurrentPassword> </div>
                                            </div>
                                            <hr>
                                            <div class="row py-2">
                                                <div class="col-md-12"> <label>New Password</label> <input type="text" class="bg-light form-control" @bind-value=ChangePassword.NewPassword> </div>
                                            </div>
                                            <div class="row py-2">
                                                <div class="col-md-12"> <label>Repeat New Password</label> <input type="text" class="bg-light form-control" @bind-value=ChangePassword.ConfirmNewPassword> </div>
                                            </div>

                                            <div class="py-3 pb-4 border-bottom"> <button type="submit" class="btn btn-primary mr-3">Set Password</button> </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </EditForm>
                }
                <div class="card" style="margin-left: 10%; margin-right: 10%;">
                    <div class="card-header" id="headingAuctions" data-toggle="collapse" data-target="#collapseAuctions" aria-expanded="false" aria-controls="collapseAuctions">
                        <h5 class="mb-0 bg text-light ">
                            Your Auctions
                        </h5>
                    </div>
                    <div id="collapseAuctions" class="collapse" aria-labelledby="headingAuctions" data-parent="#accordion">
                        <div class="card-body">
                            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.
                        </div>
                    </div>
                </div>
            </div>
        }
    </Authorized>
    <NotAuthorized>
        <p>Du musst dich anmelden, um diese Seite zu sehen!</p>
    </NotAuthorized>
</AuthorizeView>


@code {
    [CascadingParameter] public User Account { get; set; }
    public User User { get; set; }
    private ChangePasswordForm ChangePassword { get; set; }

    protected async override Task OnInitializedAsync() {
        User = await _userRepository.GetUserById(Account.Id);
        ChangePassword = new ChangePasswordForm() { CurrentPassword = Account.Password };
    }

    private async Task ExecuteSave() {
        User.Password = ChangePassword.CurrentPassword;
        await _userRepository.UpdateAsync(User);
    }

    private async Task ExecuteChangePassword() {
        Crypt<SHA256> password = await _userRepository.SetPasswordByUser(Account.Id, ChangePassword.NewPassword);
        ChangePassword = new ChangePasswordForm() { CurrentPassword = password };
    }

    private async Task InputImage(InputFileChangeEventArgs e) {
        try {
            if (e.FileCount > 0) {
                foreach (IBrowserFile file in e.GetMultipleFiles(1)) {
                    await User.Image.Set(file.OpenReadStream(5242880), file.ContentType);
                }
            }
        } catch (Exception ex) {
            Console.WriteLine(ex.Message);
        }
        this.StateHasChanged();
    }

    private class ChangePasswordForm {
        public Crypt<SHA256> CurrentPassword { get; set; }
        [Compare("CurrentPassword", ErrorMessage = "Password is not correct.")]
        public string ConfirmCurrentPassword { get; set; }

        [NotNull]
        public string NewPassword { get; set; }
        [NotNull]
        [Compare("NewPassword", ErrorMessage = "Passwords do not match.")]
        public string ConfirmNewPassword { get; set; }
    }
}
